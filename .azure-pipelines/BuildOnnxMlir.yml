# Download Repos, build and check LLVM, build and check ONNX MLIR

parameters:
- name: CMakeBuildTarget
  type: string
  default: ''
- name: CMakeExternalLIT
  type: string
  default: ''
- name: GeneratorString
  type: string
  default: 'Ninja'
- name: PythonExePath
  type: string
  default: '/usr/bin/python3'


steps:
  - checkout: self
    submodules: recursive
  - checkout: llvm-project
  - task: CMake@1
    displayName: 'CMake LLVM'
    inputs:
      workingDirectory: '$(LLVMBuildDir)'
      cmakeArgs: >-
        -G ${{ parameters.GeneratorString }}
        $(LLVMSourceDir)/llvm
        -DLLVM_ENABLE_PROJECTS=mlir
        -DLLVM_BUILD_EXAMPLES=ON
        -DLLVM_TARGETS_TO_BUILD="host;Apollo"
        -DCMAKE_BUILD_TYPE=Release
        -DLLVM_ENABLE_ASSERTIONS=ON
        -DLLVM_ENABLE_RTTI=ON

  - task: CMake@1
    displayName: 'Build LLVM'
    inputs:
      workingDirectory: '$(LLVMBuildDir)'
      cmakeArgs: '--build . --config Release'

  - task: CMake@1
    displayName: 'Check LLVM'
    inputs:
      workingDirectory: '$(LLVMBuildDir)'
      cmakeArgs: '--build . --config Release --target check-mlir'

  - task: CMake@1
    displayName: 'CMake ONNX MLIR'
    inputs:
      workingDirectory: '$(ONNXMLIRBuildDir)'
      cmakeArgs: >-
        -G ${{ parameters.GeneratorString }}
        $(ONNXMLIRSourceDir)
        ${{ parameters.CMakeExternalLIT }}
        -DCMAKE_BUILD_TYPE=Release
        -DADO_DOWNLOAD_ONNX_TEST_FILES=ON
        -DPYTHON_EXECUTABLE=${{ parameters.PythonExePath }}

  - task: CMake@1
    displayName: 'Build ONNX MLIR'
    inputs:
      workingDirectory: '$(ONNXMLIRBuildDir)'
      cmakeArgs: '--build . --config Release --target ${{ parameters.CMakeBuildTarget }}'

  - task: CMake@1
    displayName: 'Check ONNX MLIR'
    inputs:
      workingDirectory: '$(ONNXMLIRBuildDir)'
      cmakeArgs: '--build . --config Release --target check-onnx-lit'
